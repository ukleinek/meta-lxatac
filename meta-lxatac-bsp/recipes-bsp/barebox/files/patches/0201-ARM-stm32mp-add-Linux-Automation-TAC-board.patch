From: Rouven Czerwinski <r.czerwinski@pengutronix.de>
Date: Tue, 15 Jun 2021 21:18:38 +0200
Subject: [PATCH] ARM: stm32mp: add Linux Automation TAC board
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Add support for the Linux Automation GmbH Test Automation
Controller (TAC). The board boots from eMMC, but requires USB loading if
no previous barebox has been put into the eMMC boot partition.

This patch contains contributions by Ahmad Fatoum, Leonard Göhrs and
Rouven Czerwinski.

Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
Signed-off-by: Leonard Göhrs <l.goehrs@pengutronix.de>
Signed-off-by: Rouven Czerwinski <r.czerwinski@pengutronix.de>
---
 arch/arm/boards/Makefile                  |   1 +
 arch/arm/boards/lxa-tac/Makefile          |   2 +
 arch/arm/boards/lxa-tac/board.c           |  32 ++
 arch/arm/boards/lxa-tac/lowlevel.c        |  68 +++
 arch/arm/dts/Makefile                     |   1 +
 arch/arm/dts/stm32mp157c-lxa-tac-gen1.dts |   7 +
 arch/arm/dts/stm32mp157c-lxa-tac-gen2.dts |  38 ++
 arch/arm/dts/stm32mp15xc-lxa-tac.dtsi     | 138 ++++++
 arch/arm/mach-stm32mp/Kconfig             |   4 +
 dts/src/arm/stm32mp157c-lxa-tac-gen1.dts  | 103 +++++
 dts/src/arm/stm32mp157c-lxa-tac-gen2.dts  | 187 ++++++++
 dts/src/arm/stm32mp15xc-lxa-tac.dtsi      | 719 ++++++++++++++++++++++++++++++
 images/Makefile.stm32mp                   |   1 +
 13 files changed, 1301 insertions(+)
 create mode 100644 arch/arm/boards/lxa-tac/Makefile
 create mode 100644 arch/arm/boards/lxa-tac/board.c
 create mode 100644 arch/arm/boards/lxa-tac/lowlevel.c
 create mode 100644 arch/arm/dts/stm32mp157c-lxa-tac-gen1.dts
 create mode 100644 arch/arm/dts/stm32mp157c-lxa-tac-gen2.dts
 create mode 100644 arch/arm/dts/stm32mp15xc-lxa-tac.dtsi
 create mode 100644 dts/src/arm/stm32mp157c-lxa-tac-gen1.dts
 create mode 100644 dts/src/arm/stm32mp157c-lxa-tac-gen2.dts
 create mode 100644 dts/src/arm/stm32mp15xc-lxa-tac.dtsi

diff --git a/arch/arm/boards/Makefile b/arch/arm/boards/Makefile
index 671f07c7bc9c..c09fc392e5ca 100644
--- a/arch/arm/boards/Makefile
+++ b/arch/arm/boards/Makefile
@@ -150,6 +150,7 @@ obj-$(CONFIG_MACH_SOLIDRUN_MICROSOM)		+= solidrun-microsom/
 obj-$(CONFIG_MACH_STM32MP15XX_DKX)		+= stm32mp15xx-dkx/
 obj-$(CONFIG_MACH_STM32MP13XX_DK)		+= stm32mp13xx-dk/
 obj-$(CONFIG_MACH_LXA_MC1)			+= lxa-mc1/
+obj-$(CONFIG_MACH_LXA_TAC)			+= lxa-tac/
 obj-$(CONFIG_MACH_STM32MP15X_EV1)		+= stm32mp15x-ev1/
 obj-$(CONFIG_MACH_TECHNEXION_PICO_HOBBIT)	+= technexion-pico-hobbit/
 obj-$(CONFIG_MACH_TECHNEXION_WANDBOARD)		+= technexion-wandboard/
diff --git a/arch/arm/boards/lxa-tac/Makefile b/arch/arm/boards/lxa-tac/Makefile
new file mode 100644
index 000000000000..092c31d6b28d
--- /dev/null
+++ b/arch/arm/boards/lxa-tac/Makefile
@@ -0,0 +1,2 @@
+lwl-y += lowlevel.o
+obj-y += board.o
diff --git a/arch/arm/boards/lxa-tac/board.c b/arch/arm/boards/lxa-tac/board.c
new file mode 100644
index 000000000000..b17dd10880bf
--- /dev/null
+++ b/arch/arm/boards/lxa-tac/board.c
@@ -0,0 +1,32 @@
+// SPDX-License-Identifier: GPL-2.0+
+#include <common.h>
+#include <linux/sizes.h>
+#include <init.h>
+#include <asm/memory.h>
+#include <mach/bbu.h>
+#include <bootsource.h>
+#include <deep-probe.h>
+#include <of.h>
+
+static int tac_probe(struct device *dev)
+{
+	barebox_set_hostname("lxatac");
+
+	stm32mp_bbu_mmc_fip_register("mmc", "/dev/mmc1", BBU_HANDLER_FLAG_DEFAULT);
+
+	return 0;
+}
+
+static const struct of_device_id tac_of_match[] = {
+	{ .compatible = "lxa,stm32mp157c-tac-gen1" },
+	{ .compatible = "lxa,stm32mp157c-tac-gen2" },
+	{ /* sentinel */ },
+};
+BAREBOX_DEEP_PROBE_ENABLE(tac_of_match);
+
+static struct driver tac_board_driver = {
+	.name = "board-lxa-tac",
+	.probe = tac_probe,
+	.of_compatible = tac_of_match,
+};
+device_platform_driver(tac_board_driver);
diff --git a/arch/arm/boards/lxa-tac/lowlevel.c b/arch/arm/boards/lxa-tac/lowlevel.c
new file mode 100644
index 000000000000..9d5133f93710
--- /dev/null
+++ b/arch/arm/boards/lxa-tac/lowlevel.c
@@ -0,0 +1,68 @@
+// SPDX-License-Identifier: GPL-2.0+
+#include <common.h>
+#include <debug_ll.h>
+#include <mach/entry.h>
+#include <soc/stm32/gpio.h>
+
+extern char __dtb_z_stm32mp157c_lxa_tac_gen1_start[];
+extern char __dtb_z_stm32mp157c_lxa_tac_gen2_start[];
+
+/* Major board generation is set via traces in copper
+ * Minor board generation can be changed via resistors.
+ * The revision is available on GPIOs:
+ * [PZ0, PZ1, PZ2, PZ3, PZ6, PZ7] */
+#define BOARD_GEN(major, minor) (major << 2 | minor)
+#define BOARD_GEN1 BOARD_GEN(0, 0)
+#define BOARD_GEN2 BOARD_GEN(1, 0)
+
+#define RCC_MP_AHB5ENSETR ((void *)0x50000210)
+#define GPIOZ_BASE ((void *)0x54004000)
+
+static const int board_rev_pins[] = {0, 1, 2, 3, 6, 7};
+
+static u32 get_board_rev(void)
+{
+	u32 board_rev = 0;
+	size_t i;
+
+	/* Enable GPIOZ bank */
+	setbits_le32(RCC_MP_AHB5ENSETR, BIT(0));
+
+	for (i=0; i<ARRAY_SIZE(board_rev_pins); i++) {
+		int pin = board_rev_pins[i];
+
+		__stm32_pmx_gpio_input(GPIOZ_BASE, pin);
+		board_rev |= __stm32_pmx_gpio_get(GPIOZ_BASE, pin) << i;
+	}
+
+	return board_rev;
+}
+
+static void noinline select_fdt_and_start(void *fdt)
+{
+	putc_ll('>');
+
+	switch (get_board_rev()) {
+	case BOARD_GEN1:
+		fdt = __dtb_z_stm32mp157c_lxa_tac_gen1_start
+			+ get_runtime_offset();
+		break;
+	case BOARD_GEN2:
+		fdt = __dtb_z_stm32mp157c_lxa_tac_gen2_start
+			+ get_runtime_offset();
+		break;
+	}
+
+	stm32mp1_barebox_entry(fdt);
+}
+
+ENTRY_FUNCTION(start_stm32mp15xc_lxa_tac, r0, r1, r2)
+{
+	stm32mp_cpu_lowlevel_init();
+
+	/* stm32mp_cpu_lowlevel_init sets up a stack.
+	 * Do the remaining init in a non-naked function.
+	 * Register r2 points to the fdt from the FIT image
+	 * which can be used as a default. */
+	select_fdt_and_start((void *)r2);
+}
diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 7f0d589d89c8..0ade633f4f09 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -138,6 +138,7 @@ lwl-$(CONFIG_MACH_SEEED_ODYSSEY) += stm32mp157c-odyssey.dtb.o
 lwl-$(CONFIG_MACH_STM32MP15XX_DKX) += stm32mp157c-dk2.dtb.o stm32mp157a-dk1.dtb.o
 lwl-$(CONFIG_MACH_STM32MP13XX_DK) += stm32mp135f-dk.dtb.o
 lwl-$(CONFIG_MACH_LXA_MC1) += stm32mp157c-lxa-mc1.dtb.o
+lwl-$(CONFIG_MACH_LXA_TAC) += stm32mp157c-lxa-tac-gen1.dtb.o stm32mp157c-lxa-tac-gen2.dtb.o
 lwl-$(CONFIG_MACH_STM32MP15X_EV1) += stm32mp157c-ev1.dtb.o
 lwl-$(CONFIG_MACH_SCB9328) += imx1-scb9328.dtb.o
 lwl-$(CONFIG_MACH_TECHNEXION_WANDBOARD) += imx6q-wandboard.dtb.o imx6dl-wandboard.dtb.o
diff --git a/arch/arm/dts/stm32mp157c-lxa-tac-gen1.dts b/arch/arm/dts/stm32mp157c-lxa-tac-gen1.dts
new file mode 100644
index 000000000000..946269fe6bee
--- /dev/null
+++ b/arch/arm/dts/stm32mp157c-lxa-tac-gen1.dts
@@ -0,0 +1,7 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) 2023 Leonard Göhrs, Pengutronix
+ */
+
+#include <arm/stm32mp157c-lxa-tac-gen1.dts>
+#include "stm32mp15xc-lxa-tac.dtsi"
diff --git a/arch/arm/dts/stm32mp157c-lxa-tac-gen2.dts b/arch/arm/dts/stm32mp157c-lxa-tac-gen2.dts
new file mode 100644
index 000000000000..6438b0163682
--- /dev/null
+++ b/arch/arm/dts/stm32mp157c-lxa-tac-gen2.dts
@@ -0,0 +1,38 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) 2023 Leonard Göhrs, Pengutronix
+ */
+
+#include <arm/stm32mp157c-lxa-tac-gen2.dts>
+#include "stm32mp15xc-lxa-tac.dtsi"
+
+/ {
+	led-controller-pwm {
+		compatible = "pwm-leds";
+
+		led-status-red {
+			label = "pwm:red:status";
+			pwms = <&led_pwm 0 1000000 0>;
+			active-low;
+			max-brightness = <255>;
+		};
+
+		led-status-green {
+			label = "pwm:green:status";
+			pwms = <&led_pwm 2 1000000 0>;
+			active-low;
+			max-brightness = <255>;
+		};
+
+		led-status-blue {
+			label = "pwm:blue:status";
+			pwms = <&led_pwm 1 1000000 0>;
+			active-low;
+			max-brightness = <255>;
+		};
+	};
+
+	led-controller-1 {
+		status = "disabled";
+	};
+};
diff --git a/arch/arm/dts/stm32mp15xc-lxa-tac.dtsi b/arch/arm/dts/stm32mp15xc-lxa-tac.dtsi
new file mode 100644
index 000000000000..33f83e035457
--- /dev/null
+++ b/arch/arm/dts/stm32mp15xc-lxa-tac.dtsi
@@ -0,0 +1,138 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) 2020 Ahmad Fatoum, Pengutronix
+ */
+
+#include "stm32mp151.dtsi"
+
+/ {
+	chosen {
+		environment {
+			compatible = "barebox,environment";
+			device-path = &environment_emmc;
+		};
+	};
+
+	aliases {
+		state = &state_emmc;
+		baseboard-factory-data = &baseboard_factory_data;
+		powerboard-factory-data = &powerboard_factory_data;
+	};
+
+	baseboard_factory_data: baseboard-factory-data {
+		compatible = "lxa,tlv-baseboard-v1";
+		backend = <&baseboard_tlv_backend>;
+	};
+
+	powerboard_factory_data: powerboard-factory-data {
+		compatible = "lxa,tlv-powerboard-v1";
+		backend = <&powerboard_tlv_backend>;
+	};
+
+	reserved-memory {
+		ramoops {
+			compatible = "ramoops";
+			/* Everything else will be fixed up at runtime */
+		};
+	};
+
+	state_emmc: state {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "barebox,state";
+		magic = <0xfee2ea9b>;
+		backend-type = "raw";
+		backend = <&backend_state_emmc>;
+		backend-stridesize = <0x1000>;
+
+		bootstate {
+			#address-cells = <1>;
+			#size-cells = <1>;
+
+			system0 {
+				#address-cells = <1>;
+				#size-cells = <1>;
+
+				remaining_attempts@0 {
+					reg = <0x0 0x4>;
+					type = "uint32";
+					default = <3>;
+				};
+
+				priority@4 {
+					reg = <0x4 0x4>;
+					type = "uint32";
+					default = <20>;
+				};
+			};
+
+			system1 {
+				#address-cells = <1>;
+				#size-cells = <1>;
+
+				remaining_attempts@8 {
+					reg = <0x8 0x4>;
+					type = "uint32";
+					default = <0>;
+				};
+
+				priority@c {
+					reg = <0xc 0x4>;
+					type = "uint32";
+					default = <0>;
+				};
+			};
+
+			last_chosen@10 {
+				reg = <0x10 0x4>;
+				type = "uint32";
+			};
+		};
+	};
+};
+
+&baseboard_eeprom {
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	baseboard_tlv_backend: factory-data@0 {
+		reg = <0 0x400>;
+		label = "tlv";
+	};
+};
+
+&powerboard_eeprom {
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	powerboard_tlv_backend: factory-data@0 {
+		reg = <0 0x100>;
+		label = "tlv";
+	};
+};
+
+&sdmmc2 {
+	partitions {
+		compatible = "fixed-partitions";
+		#address-cells = <2>;
+		#size-cells = <2>;
+
+		environment_emmc: partition@80000 {
+			label = "barebox-environment";
+			reg = <0 0x80000 0 0x40000>;
+		};
+
+		backend_state_emmc: partition@c0000 {
+			label = "barebox-state";
+			reg = <0 0xc0000 0 0x40000>;
+		};
+	};
+};
+
+&usbh_ehci {
+	status = "disabled";
+};
+
+&usbh_ohci {
+	status = "okay";
+};
diff --git a/arch/arm/mach-stm32mp/Kconfig b/arch/arm/mach-stm32mp/Kconfig
index bc0a48d64c82..e244bd392503 100644
--- a/arch/arm/mach-stm32mp/Kconfig
+++ b/arch/arm/mach-stm32mp/Kconfig
@@ -29,6 +29,10 @@ config MACH_LXA_MC1
 	select ARCH_STM32MP157
 	bool "Linux Automation MC-1 board"
 
+config MACH_LXA_TAC
+	select ARCH_STM32MP157
+	bool "Linux Automation TAC board"
+
 config MACH_SEEED_ODYSSEY
 	select ARCH_STM32MP157
 	bool "Seeed Studio Odyssey"
diff --git a/dts/src/arm/stm32mp157c-lxa-tac-gen1.dts b/dts/src/arm/stm32mp157c-lxa-tac-gen1.dts
new file mode 100644
index 000000000000..230126569be5
--- /dev/null
+++ b/dts/src/arm/stm32mp157c-lxa-tac-gen1.dts
@@ -0,0 +1,103 @@
+/* SPDX-License-Identifier: (GPL-2.0-or-later OR BSD-3-Clause) */
+/*
+ * Copyright (C) 2020 STMicroelectronics - All Rights Reserved
+ * Copyright (C) 2021 Rouven Czerwinski, Pengutronix
+ * Copyright (C) 2023 Leonard Göhrs, Pengutronix
+ */
+
+/dts-v1/;
+
+#include "stm32mp157.dtsi"
+#include "stm32mp15xc-lxa-tac.dtsi"
+
+/ {
+	model = "Linux Automation Test Automation Controller (TAC) Gen 1";
+	compatible = "lxa,stm32mp157c-tac-gen1", "oct,stm32mp15xx-osd32", "st,stm32mp157";
+
+	backlight: backlight {
+		compatible = "pwm-backlight";
+		pwms = <&backlight_pwm 1 1000000 0>;
+		brightness-levels = <0 31 63 95 127 159 191 223 255>;
+		default-brightness-level = <7>;
+		power-supply = <&v3v3>;
+	};
+
+	reg_iobus_12v: regulator_iobus_12v {
+		compatible = "regulator-fixed";
+		regulator-name = "12V_IOBUS";
+		regulator-min-microvolt = <12000000>;
+		regulator-max-microvolt = <12000000>;
+		vin-supply = <&reg_12v>;
+		gpio = <&gpioh 13 GPIO_ACTIVE_LOW>;
+	};
+};
+
+&timers1 {
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	status = "okay";
+
+	backlight_pwm: pwm {
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&pwm1_pins_c>;
+		pinctrl-1 = <&pwm1_sleep_pins_c>;
+		status = "okay";
+	};
+};
+
+&gpioa {
+	gpio-line-names = "", "", "STACK_CS2", "", \
+	"STACK_CS3", "ETH_GPIO1", "ETH_INT", "", \
+	"", "", "", "", \
+	"", "BOOTROM_LED", "ETH_LAB_LEDRP", "";
+};
+
+&gpioc {
+	gpio-line-names = "", "STACK_CS1", "", "", "", "", "", "", \
+	"", "", "", "";
+};
+
+&i2c1 {
+	powerboard_gpio: pca9570@24 {
+		compatible = "nxp,pca9570";
+		reg = <0x24>;
+		gpio-controller;
+		#gpio-cells = <2>;
+		gpio-line-names = "DUT_PWR_EN", "DUT_PWR_DISCH", \
+		"DUT_PWR_ADCRST", "";
+		status = "okay";
+	};
+};
+
+&spi2 {
+	lmp92064@0 {
+		compatible = "ti,lmp92064";
+		reg = <0>;
+		spi-max-frequency = <5000000>;
+		vdd-supply = <&reg_pb_3v3>;
+		vdig-supply = <&reg_pb_3v3>;
+		reset-gpios = <&powerboard_gpio 2 GPIO_ACTIVE_HIGH>;
+		shunt-resistor-micro-ohms = <15000>;
+	};
+};
+
+&gpu {
+	status = "disabled";
+};
+
+&pinctrl {
+	pwm1_pins_c: pwm1-2 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 11, AF1)>; /* TIM1_CH2 */
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	pwm1_sleep_pins_c: pwm1-sleep-2 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 11, ANALOG)>; /* TIM1_CH2 */
+		};
+	};
+};
diff --git a/dts/src/arm/stm32mp157c-lxa-tac-gen2.dts b/dts/src/arm/stm32mp157c-lxa-tac-gen2.dts
new file mode 100644
index 000000000000..0b325db73395
--- /dev/null
+++ b/dts/src/arm/stm32mp157c-lxa-tac-gen2.dts
@@ -0,0 +1,187 @@
+/* SPDX-License-Identifier: (GPL-2.0-or-later OR BSD-3-Clause) */
+/*
+ * Copyright (C) 2020 STMicroelectronics - All Rights Reserved
+ * Copyright (C) 2021 Rouven Czerwinski, Pengutronix
+ * Copyright (C) 2023 Leonard Göhrs, Pengutronix
+ */
+
+/dts-v1/;
+
+#include "stm32mp157.dtsi"
+#include "stm32mp15xc-lxa-tac.dtsi"
+
+/ {
+	model = "Linux Automation Test Automation Controller (TAC) Gen 2";
+	compatible = "lxa,stm32mp157c-tac-gen2", "oct,stm32mp15xx-osd32", "st,stm32mp157";
+
+	backlight: backlight {
+		compatible = "pwm-backlight";
+		pwms = <&led_pwm 3 1000000 0>;
+		brightness-levels = <0 31 63 95 127 159 191 223 255>;
+		default-brightness-level = <7>;
+		power-supply = <&v3v3>;
+	};
+
+	reg_iobus_12v: regulator_iobus_12v {
+		compatible = "regulator-fixed";
+		regulator-name = "12V_IOBUS";
+		regulator-min-microvolt = <12000000>;
+		regulator-max-microvolt = <12000000>;
+		vin-supply = <&reg_12v>;
+		gpio = <&gpioh 13 GPIO_ACTIVE_LOW>;
+		enable-active-low;
+	};
+
+	led-controller-1 {
+		compatible = "pwm-leds-multicolor";
+
+		multi-led {
+			color = <LED_COLOR_ID_RGB>;
+			function = LED_FUNCTION_STATUS;
+			max-brightness = <65535>;
+
+			led-red {
+				active-low;
+				pwms = <&led_pwm 0 1000000 0>;
+				color = <LED_COLOR_ID_RED>;
+			};
+
+			led-green {
+				active-low;
+				pwms = <&led_pwm 2 1000000 0>;
+				color = <LED_COLOR_ID_GREEN>;
+			};
+
+			led-blue {
+				active-low;
+				pwms = <&led_pwm 1 1000000 0>;
+				color = <LED_COLOR_ID_BLUE>;
+			};
+		};
+	};
+
+	led-controller-2 {
+		compatible = "gpio-leds";
+
+		led-5 {
+			label = "tac:green:iobus";
+			gpios = <&gpiog 1 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-6 {
+			label = "tac:green:can";
+			gpios = <&gpiof 3 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-7 {
+			label = "tac:green:out0";
+			gpios = <&gpiob 8 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-8 {
+			label = "tac:green:out1";
+			gpios = <&gpiog 3 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-9 {
+			label = "tac:green:uarttx";
+			gpios = <&gpiod 3 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-10 {
+			label = "tac:green:uartrx";
+			gpios = <&gpiof 6 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-11 {
+			label = "tac:green:usbh1";
+			gpios = <&gpioc 8 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-12 {
+			label = "tac:green:usbh2";
+			gpios = <&gpiod 6 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-13 {
+			label = "tac:green:usbh3";
+			gpios = <&gpiob 9 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-14 {
+			label = "tac:green:usbg";
+			gpios = <&gpiod 14 GPIO_ACTIVE_HIGH>;
+			linux,default-trigger = "usb-gadget";
+		};
+
+		led-15 {
+			label = "tac:green:dutpwr";
+			gpios = <&gpioa 15 GPIO_ACTIVE_HIGH>;
+		};
+	};
+};
+
+&timers8 {
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	status = "okay";
+
+	led_pwm: pwm {
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&pwm8_pins_b>;
+		pinctrl-1 = <&pwm8_sleep_pins_b>;
+		status = "okay";
+	};
+};
+
+&gpioa {
+	gpio-line-names = "", "", "DUT_PWR_EN", "", \
+	"STACK_CS3", "ETH_GPIO1", "ETH_INT", "", \
+	"", "", "", "", \
+	"", "BOOTROM_LED", "ETH_LAB_LEDRP", "";
+};
+
+&gpioc {
+	gpio-line-names = "", "DUT_PWR_DISCH", "", "", "", "", "", "", \
+	"", "", "", "";
+};
+
+&spi2 {
+	lmp92064@0 {
+		compatible = "ti,lmp92064";
+		reg = <0>;
+		spi-max-frequency = <5000000>;
+		vdd-supply = <&reg_pb_3v3>;
+		vdig-supply = <&reg_pb_3v3>;
+		reset-gpios = <&gpioa 4 GPIO_ACTIVE_HIGH>;
+		shunt-resistor-micro-ohms = <15000>;
+	};
+};
+
+&gpu {
+	status = "disabled";
+};
+
+&pinctrl {
+	pwm8_pins_b: pwm8-1 {
+		pins {
+			pinmux = <STM32_PINMUX('I', 5, AF3)>, /* TIM8_CH1 */
+				 <STM32_PINMUX('I', 6, AF3)>, /* TIM8_CH2 */
+				 <STM32_PINMUX('I', 7, AF3)>, /* TIM8_CH3 */
+				 <STM32_PINMUX('C', 9, AF3)>; /* TIM8_CH4 */
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	pwm8_sleep_pins_b: pwm8-sleep-1 {
+		pins {
+			pinmux = <STM32_PINMUX('I', 5, ANALOG)>, /* TIM8_CH1 */
+				 <STM32_PINMUX('I', 6, ANALOG)>, /* TIM8_CH2 */
+				 <STM32_PINMUX('I', 7, ANALOG)>, /* TIM8_CH3 */
+				 <STM32_PINMUX('C', 9, ANALOG)>; /* TIM8_CH4 */
+		};
+	};
+};
+
diff --git a/dts/src/arm/stm32mp15xc-lxa-tac.dtsi b/dts/src/arm/stm32mp15xc-lxa-tac.dtsi
new file mode 100644
index 000000000000..7d0da30f27d6
--- /dev/null
+++ b/dts/src/arm/stm32mp15xc-lxa-tac.dtsi
@@ -0,0 +1,719 @@
+/* SPDX-License-Identifier: (GPL-2.0-or-later OR BSD-3-Clause) */
+/*
+ * Copyright (C) 2020 STMicroelectronics - All Rights Reserved
+ * Copyright (C) 2021 Rouven Czerwinski, Pengutronix
+ */
+
+#include "stm32mp15xc.dtsi"
+#include "stm32mp15xx-osd32.dtsi"
+#include "stm32mp15xxac-pinctrl.dtsi"
+
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/leds/common.h>
+#include <dt-bindings/pwm/pwm.h>
+
+/ {
+	aliases {
+		ethernet0 = &ethernet0;
+		ethernet1 = &port_uplink;
+		ethernet2 = &port_dut;
+		mmc1 = &sdmmc2;
+		serial0 = &uart4;
+		serial1 = &usart3;
+	};
+
+	chosen {
+		stdout-path = &uart4;
+	};
+
+	led-controller-0 {
+		compatible = "gpio-leds";
+
+		led-0 {
+			label = "tac:green:user1";
+			gpios = <&gpiof 10 GPIO_ACTIVE_HIGH>;
+			linux,default-trigger = "heartbeat";
+		};
+
+		led-1 {
+			label = "tac:green:user2";
+			gpios = <&gpiog 7 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-2 {
+			label = "tac:green:statusdut";
+			gpios = <&gpioa 13 GPIO_ACTIVE_LOW>;
+		};
+
+		/* led-3 and led-4 are internally connected antiparallel to one
+		 * another inside the ethernet jack like this:
+		 * GPIOA14 ---+---|led-3|>--+--- GPIOD15
+		 *            +--<|led-4|---+
+		 * E.g. only one of the LEDs can be illuminated at a time while
+		 * the other output must be driven low.
+		 * This should likely be implemented using a multi color LED
+		 * driver for antiparallel LEDs. */
+		led-3 {
+			label = "tac:green:statuslab";
+			gpios = <&gpioa 14 GPIO_ACTIVE_HIGH>;
+		};
+
+		led-4 {
+			label = "tac:orange:statuslab";
+			gpios = <&gpiod 15 GPIO_ACTIVE_HIGH>;
+		};
+	};
+
+	gpio-keys {
+		compatible = "gpio-keys";
+
+		user-button1 {
+			label = "USER_BTN";
+			linux,code = <KEY_HOME>;
+			gpios = <&gpioi 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
+		};
+
+		user-button2 {
+			label = "USER_BTN2";
+			linux,code = <KEY_ESC>;
+			gpios = <&gpioe 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
+		};
+	};
+
+	/* supplied by either barrel connector or PoE */
+	reg_12v: regulator_12v {
+		compatible = "regulator-fixed";
+		regulator-name = "12V";
+		regulator-min-microvolt = <12000000>;
+		regulator-max-microvolt = <12000000>;
+		regulator-always-on;
+	};
+
+	reg_5v: regulator_5v {
+		compatible = "regulator-fixed";
+		regulator-name = "5V";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		regulator-always-on;
+		vin-supply = <&reg_12v>;
+	};
+
+	reg_1v2: regulator_1v2 {
+		compatible = "regulator-fixed";
+		regulator-name = "1V2";
+		regulator-min-microvolt = <1200000>;
+		regulator-max-microvolt = <1200000>;
+		regulator-always-on;
+		vin-supply = <&reg_5v>;
+	};
+
+	reg_pb_5v: regulator_pb_5v {
+		compatible = "regulator-fixed";
+		regulator-name = "5V_POWERBOARD";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		regulator-always-on;
+		vin-supply = <&reg_5v>;
+	};
+
+	reg_pb_3v3: regulator_pb_3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "3V3_POWERBOARD";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+		vin-supply = <&reg_pb_5v>;
+	};
+
+	output_iobus_12v {
+		compatible = "regulator-output";
+		vout-supply = <&reg_iobus_12v>;
+	};
+
+	output_vuart {
+		compatible = "regulator-output";
+		vout-supply = <&v3v3_hdmi>;
+	};
+
+	iobus_curr: current-sense-amplifier-0 {
+		compatible = "current-sense-amplifier";
+		io-channels = <&adc1 5>;
+		#io-channel-cells = <0>;
+		label = "iobus-curr";
+		sense-resistor-micro-ohms = <2200000000>; /* 2.2k */
+		sense-gain-mult = <653>;
+		sense-gain-div = <1000000>;
+	};
+
+	iobus_volt: voltage-divider {
+		compatible = "voltage-divider";
+		io-channels = <&adc1 9>;
+		#io-channel-cells = <0>;
+		label = "iobus-volt";
+		output-ohms = <1000>;
+		full-ohms = <6100>;
+	};
+
+	iobus {
+		compatible = "iio-hwmon";
+		io-channels = <&iobus_volt>, <&iobus_curr>;
+	};
+
+	host_curr: current-sense-amplifier-1 {
+		compatible = "current-sense-amplifier";
+		io-channels = <&adc1 13>;
+		#io-channel-cells = <0>;
+		label = "host-curr";
+		sense-resistor-micro-ohms = <1300000000>; /* 1.3k */
+		sense-gain-mult = <653>;
+		sense-gain-div = <1000000>;
+	};
+
+	host_1_curr: current-sense-amplifier-2 {
+		compatible = "current-sense-amplifier";
+		io-channels = <&adc1 15>;
+		#io-channel-cells = <0>;
+		label = "host-1-curr";
+		sense-resistor-micro-ohms = <1800000000>; /* 1.8k */
+		sense-gain-mult = <653>;
+		sense-gain-div = <1000000>;
+	};
+
+	host_2_curr: current-sense-amplifier-3 {
+		compatible = "current-sense-amplifier";
+		io-channels = <&adc1 0>; /* via ANA0 */
+		#io-channel-cells = <0>;
+		label = "host-2-curr";
+		sense-resistor-micro-ohms = <1800000000>; /* 1.8k */
+		sense-gain-mult = <653>;
+		sense-gain-div = <1000000>;
+	};
+
+	host_3_curr: current-sense-amplifier-4 {
+		compatible = "current-sense-amplifier";
+		io-channels = <&adc1 1>; /* via ANA1 */
+		#io-channel-cells = <0>;
+		label = "host-3-curr";
+		sense-resistor-micro-ohms = <1800000000>; /* 1.8k */
+		sense-gain-mult = <653>;
+		sense-gain-div = <1000000>;
+	};
+
+	usb {
+		compatible = "iio-hwmon";
+		io-channels = <&host_curr>, <&host_1_curr>, <&host_2_curr>, <&host_3_curr>;
+	};
+};
+
+&pwr_regulators {
+	vdd-supply = <&vdd>;
+	vdd_3v3_usbfs-supply = <&vdd_usb>;
+};
+
+&v3v3_hdmi {
+	/delete-property/regulator-always-on;
+};
+
+&hash1 {
+	status = "okay";
+};
+
+&crc1 {
+	status = "okay";
+};
+
+&cryp1 {
+	status = "okay";
+};
+
+&vrefbuf {
+	regulator-min-microvolt = <2500000>;
+	regulator-max-microvolt = <2500000>;
+	vdda-supply = <&vdda>;
+	status = "okay";
+};
+
+&adc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&adc1_ain_pins_a>;
+	vdd-supply = <&vdd>;
+	vdda-supply = <&vdda>;
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+
+	adc1: adc@0 {
+		st,adc-channels = <0 1 2 5 9 10 13 15>;
+		st,min-sample-time-nsecs = <5000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "okay";
+		channel@0 {
+			reg = <0>;
+			label = "HOST_2_CURR_FB";
+		};
+		channel@1 {
+			reg = <1>;
+			label = "HOST_3_CURR_FB";
+		};
+		channel@2 {
+			reg = <2>;
+			label = "OUT_0_FB";
+		};
+		channel@5 {
+			reg = <5>;
+			label = "IOBUS_CURR_FB";
+		};
+		channel@9 {
+			reg = <9>;
+			label = "IOBUS_VOLT_FB";
+		};
+		channel@10 {
+			reg = <10>;
+			label = "OUT_1_FB";
+		};
+		channel@13 {
+			reg = <13>;
+			label = "HOST_CURR_FB";
+		};
+		channel@15 {
+			reg = <15>;
+			label = "HOST_1_CURR_FB";
+		};
+	};
+
+	adc2: adc@100 {
+		st,adc-channels = <12>;
+		st,min-sample-time-nsecs = <500000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "okay";
+		channel@12 {
+			reg = <12>;
+			label = "TEMP_INTERNAL";
+		};
+	};
+};
+
+&rtc {
+	status = "okay";
+};
+
+&iwdg2 {
+	timeout-sec = <8>;
+	status = "okay";
+};
+
+&timers2 {
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	status = "okay";
+	timer@1 {
+		status = "okay";
+	};
+};
+
+&timers3 {
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	status = "okay";
+	timer@2 {
+		status = "okay";
+	};
+};
+
+&timers4 {
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	status = "okay";
+	timer@3 {
+		status = "okay";
+	};
+};
+
+&dts {
+	status = "okay";
+};
+
+&gpiob {
+	gpio-line-names = "", "", "", "", "", "", "USB_RESET", "", \
+	"", "", "", "", "", "", "", "";
+};
+
+&gpiod {
+	gpio-line-names = "", "", "", "", "TP38", "TP39", "", "", \
+	"TP41", "TP42", "OLED_DC", "", "", "ETH_CS", "", "ETH_LAB_LEDRN";
+};
+
+&gpioe {
+	gpio-line-names = "TP35", "", "", "", "CAN_1_120R", "", "", "USER_BTN2", \
+	"TP48", "UART_TX_EN", "UART_RX_EN", "TP24", "", "TP25", "TP26", "TP27";
+};
+
+&gpiof {
+	gpio-line-names = "TP36", "TP37", "", "", "OLED_CS", "", "", "", \
+	"", "", "USER_LED1", "", "STACK_CS0", "", "", "";
+};
+
+&gpiog {
+	gpio-line-names = "ETH_RESET", "", "", "", \
+	"", "IOBUS_FLT_FB", "", "USER_LED2", \
+	"ETH1_PPS_A", "CAN_0_120R", "TP49", "", \
+	"", "", "", "";
+};
+
+&gpioh {
+	gpio-line-names = "", "", "OUT_1", "OUT_0", "OLED_RESET", "", "", "", \
+	"", "", "ETH1_PPS_B", "ETH_GPIO2", "", "IOBUS_PWR_EN", "", "TP33";
+};
+
+&gpioi {
+	gpio-line-names = "TIM_RTS", "", "", "", \
+	"DEVICE_DATA_EN", "", "", "", \
+	"ETH_WOL", "TP43", "", "USER_BTN";
+};
+
+&gpioz {
+	gpio-line-names = "HWID0", "HWID1", "HWID2", "HWID3", \
+	"", "", "HWID4", "HWID5";
+};
+
+&pmic {
+	regulators {
+		buck1-supply = <&reg_5v>;	/* VIN */
+		buck2-supply = <&reg_5v>;	/* VIN */
+		buck3-supply = <&reg_5v>;	/* VIN */
+		buck4-supply = <&reg_5v>;	/* VIN */
+		ldo2-supply = <&reg_5v>;	/* PMIC_LDO25IN */
+		ldo4-supply = <&reg_5v>;	/* VIN */
+		ldo5-supply = <&reg_5v>;	/* PMIC_LDO25IN */
+		vref_ddr-supply = <&reg_5v>;	/* VIN */
+		boost-supply = <&reg_5v>;	/* PMIC_BSTIN */
+		pwr_sw2-supply = <&bst_out>;	/* PMIC_SWIN */
+	};
+};
+
+&sdmmc2 {
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc2_b4_pins_a &sdmmc2_d47_pins_b>;
+	pinctrl-1 = <&sdmmc2_b4_od_pins_a &sdmmc2_d47_pins_b>;
+	pinctrl-2 = <&sdmmc2_b4_sleep_pins_a &sdmmc2_d47_sleep_pins_b>;
+	bus-width = <8>;
+	mmc-ddr-3_3v;
+	no-1-8-v;
+	no-sd;
+	no-sdio;
+	non-removable;
+	st,neg-edge;
+	vmmc-supply = <&v3v3>;
+	status = "okay";
+};
+
+&uart4 {
+	label = "debug";
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart4_pins_a>;
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	status = "okay";
+};
+
+&ethernet0 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&ethernet0_rgmii_pins_d>;
+	pinctrl-1 = <&ethernet0_rgmii_sleep_pins_d>;
+	phy-mode = "rgmii-id";
+	assigned-clocks = <&rcc ETHCK_K>, <&rcc PLL4_P>;
+	assigned-clock-parents = <&rcc PLL4_P>;
+	assigned-clock-rates = <125000000>; /* Clock PLL4 to 750Mhz in ATF/U-Boot */
+	st,eth-clk-sel;
+	status = "okay";
+
+	fixed-link {
+		speed = <1000>;
+		full-duplex;
+	};
+};
+
+&i2c1 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c1_pins_b>;
+	pinctrl-1 = <&i2c1_sleep_pins_b>;
+	status = "okay";
+
+	powerboard_eeprom: eeprom@50 {
+		compatible = "atmel,24c02";
+		reg = <0x50>;
+		vcc-supply = <&v3v3>;
+	};
+
+	lm75ad@48 {
+		compatible = "national,lm75a";
+		reg = <0x48>;
+		status = "disabled";
+	};
+};
+
+baseboard_eeprom: &sip_eeprom {
+};
+
+&i2c5 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c5_pins_b>;
+	pinctrl-1 = <&i2c5_sleep_pins_b>;
+	status = "okay";
+	/delete-property/dmas;
+	/delete-property/dma-names;
+
+	usbhub: usbhub@2c {
+		compatible ="microchip,usb2514b";
+		reg = <0x2c>;
+		reset-gpios = <&gpiob 6 GPIO_ACTIVE_LOW>;
+		vdd-supply = <&v3v3>;
+	};
+};
+
+&spi2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&spi2_pins_b>;
+	cs-gpios = <&gpiof 12 GPIO_ACTIVE_LOW>;
+	status = "okay";
+};
+
+&spi5 {
+	/* spare dmas for other usage */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	pinctrl-names = "default";
+	pinctrl-0 = <&spi5_pins_a>;
+	cs-gpios = <&gpiod 13 GPIO_ACTIVE_LOW>;
+	status = "okay";
+
+	ksz9563: ksz9563@0 {
+		compatible = "microchip,ksz9563";
+		reg = <0>;
+
+		reset-gpios = <&gpiog 0 GPIO_ACTIVE_LOW>;
+		spi-max-frequency = <44000000>;
+		spi-cpha;
+		spi-cpol;
+
+		interrupt-parent = <&gpioa>;
+		interrupts = <6 IRQ_TYPE_EDGE_RISING>;
+
+		status = "okay";
+
+		ports {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			port_dut: port@0 {
+				reg = <0>;
+				label = "dut";
+			};
+			port_uplink: port@1 {
+				reg = <1>;
+				label = "uplink";
+			};
+			port_cpu: port@2 {
+				reg = <2>;
+				label = "cpu";
+
+				ethernet = <&ethernet0>;
+
+				phy-mode = "rgmii-id";
+				rx-internal-delay-ps = <2000>;
+				tx-internal-delay-ps = <2000>;
+
+				fixed-link {
+					speed = <1000>;
+					full-duplex;
+				};
+			};
+		};
+	};
+};
+
+&usbotg_hs {
+	phys = <&usbphyc_port1 0>;
+	phy-names = "usb2-phy";
+	dr_mode = "peripheral";
+	vusb_d-supply = <&vdd_usb>;
+	vusb_a-supply = <&reg18>;
+	status = "okay";
+};
+
+&usbh_ehci {
+	phys = <&usbphyc_port0>;
+	phy-names = "usb";
+	status = "okay";
+};
+
+&spi4 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&spi4_pins_a>;
+	cs-gpios = <&gpiof 4 GPIO_ACTIVE_LOW>;
+	status = "okay";
+
+	lcd: display@0 {
+		compatible = "shineworld,lh133k", "panel-mipi-dbi-spi";
+		spi-max-frequency = <32000000>;
+		power-supply = <&v3v3>;
+		backlight = <&backlight>;
+
+		reg = <0>;
+		width-mm = <23>;
+		height-mm = <23>;
+		rotation = <180>;
+
+		reset-gpios = <&gpioh 4 GPIO_ACTIVE_HIGH>;
+		dc-gpios = <&gpiod 10 GPIO_ACTIVE_HIGH>;
+		spi-3wire;
+
+		panel-timing {
+			hactive = <240>;
+			vactive = <240>;
+			hback-porch = <0>;
+			vback-porch = <0>;
+
+			clock-frequency = <0>;
+			hfront-porch = <0>;
+			hsync-len = <0>;
+			vfront-porch = <0>;
+			vsync-len = <0>;
+		};
+	};
+};
+
+&usbphyc {
+	status = "okay";
+};
+
+&usbphyc_port0 {
+	phy-supply = <&vdd_usb>;
+};
+
+&usbphyc_port1 {
+	phy-supply = <&vdd_usb>;
+};
+
+&m_can1 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&m_can1_pins_b>;
+	pinctrl-1 = <&m_can1_sleep_pins_b>;
+	status = "okay";
+};
+
+&m_can2 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&m_can2_pins_a>;
+	pinctrl-1 = <&m_can2_sleep_pins_a>;
+	status = "okay";
+};
+
+&usart3 {
+	label = "dut";
+	uart-has-rtscts;
+
+	/delete-property/dmas;
+	/delete-property/dma-names;
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&usart3_pins_e>;
+
+	status = "okay";
+};
+
+&pinctrl {
+	adc1_ain_pins_a: adc1-ain-0 {
+		pins {
+			pinmux = <STM32_PINMUX('F', 11, ANALOG)>, /* ADC1_INP2 */
+				 <STM32_PINMUX('B', 1, ANALOG)>, /* ADC1_INP5 */
+				 <STM32_PINMUX('B', 0, ANALOG)>, /* ADC1_INP9 */
+				 <STM32_PINMUX('C', 0, ANALOG)>, /* ADC1_INP10 */
+				 <STM32_PINMUX('C', 3, ANALOG)>, /* ADC1_INP13 */
+				 <STM32_PINMUX('A', 3, ANALOG)>; /* ADC1_INP15 */
+		};
+	};
+	ethernet0_rgmii_pins_d: rgmii-1 {
+		pins1 {
+			pinmux = <STM32_PINMUX('G', 4, AF11)>, /* ETH_RGMII_GTX_CLK */
+				 <STM32_PINMUX('G', 13, AF11)>, /* ETH_RGMII_TXD0 */
+				 <STM32_PINMUX('G', 14, AF11)>, /* ETH_RGMII_TXD1 */
+				 <STM32_PINMUX('C', 2, AF11)>, /* ETH_RGMII_TXD2 */
+				 <STM32_PINMUX('E', 2, AF11)>, /* ETH_RGMII_TXD3 */
+				 <STM32_PINMUX('B', 11, AF11)>; /* ETH_RGMII_TX_CTL */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('C', 4, AF11)>, /* ETH_RGMII_RXD0 */
+				 <STM32_PINMUX('C', 5, AF11)>, /* ETH_RGMII_RXD1 */
+				 <STM32_PINMUX('H', 6, AF11)>, /* ETH_RGMII_RXD2 */
+				 <STM32_PINMUX('H', 7, AF11)>, /* ETH_RGMII_RXD3 */
+				 <STM32_PINMUX('A', 1, AF11)>, /* ETH_RGMII_RX_CLK */
+				 <STM32_PINMUX('A', 7, AF11)>; /* ETH_RGMII_RX_CTL */
+			bias-disable;
+		};
+	};
+	ethernet0_rgmii_sleep_pins_d: rgmii-sleep-1 {
+		pins1 {
+			pinmux = <STM32_PINMUX('G', 4, ANALOG)>, /* ETH_RGMII_GTX_CLK */
+				 <STM32_PINMUX('G', 13, ANALOG)>, /* ETH_RGMII_TXD0 */
+				 <STM32_PINMUX('G', 14, ANALOG)>, /* ETH_RGMII_TXD1 */
+				 <STM32_PINMUX('C', 2, ANALOG)>, /* ETH_RGMII_TXD2 */
+				 <STM32_PINMUX('E', 2, ANALOG)>, /* ETH_RGMII_TXD3 */
+				 <STM32_PINMUX('B', 11, ANALOG)>, /* ETH_RGMII_TX_CTL */
+				 <STM32_PINMUX('C', 4, ANALOG)>, /* ETH_RGMII_RXD0 */
+				 <STM32_PINMUX('C', 5, ANALOG)>, /* ETH_RGMII_RXD1 */
+				 <STM32_PINMUX('H', 6, ANALOG)>, /* ETH_RGMII_RXD2 */
+				 <STM32_PINMUX('H', 7, ANALOG)>, /* ETH_RGMII_RXD3 */
+				 <STM32_PINMUX('A', 1, ANALOG)>, /* ETH_RGMII_RX_CLK */
+				 <STM32_PINMUX('A', 7, ANALOG)>; /* ETH_RGMII_RX_CTL */
+		 };
+	};
+	spi2_pins_b: spi2-1 {
+		pins1 {
+			pinmux = <STM32_PINMUX('I', 1, AF5)>, /* SPI2_SCK */
+				 <STM32_PINMUX('I', 3, AF5)>; /* SPI2_MOSI */
+			bias-disable;
+			drive-push-pull;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('I', 2, AF5)>; /* SPI2_MISO */
+			bias-pull-down;
+		};
+	};
+	spi5_pins_a: spi5-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('F', 7, AF5)>, /* SPI5_SCK */
+				 <STM32_PINMUX('F', 9, AF5)>; /* SPI5_MOSI */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+
+		pins2 {
+			pinmux = <STM32_PINMUX('F', 8, AF5)>; /* SPI5_MISO */
+			bias-disable;
+		};
+	};
+	usart3_pins_e: usart3-4 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 10, AF7)>, /* USART3_TX */
+				 <STM32_PINMUX('D', 12, AF7)>; /* USART3_RTS */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 12, AF8)>, /* USART3_RX */
+				 <STM32_PINMUX('D', 11, AF7)>; /* USART3_CTS_NSS */
+			bias-disable;
+		};
+	};
+};
diff --git a/images/Makefile.stm32mp b/images/Makefile.stm32mp
index 59d65722078d..f6e4bd959c6f 100644
--- a/images/Makefile.stm32mp
+++ b/images/Makefile.stm32mp
@@ -35,6 +35,7 @@ $(call build_stm32mp_image, CONFIG_MACH_STM32MP15XX_DKX, start_stm32mp15xx_dkx,
 $(call build_stm32mp_image, CONFIG_MACH_STM32MP15X_EV1, start_stm32mp15x_ev1, stm32mp15x-ev1)
 
 $(call build_stm32mp_image, CONFIG_MACH_LXA_MC1, start_stm32mp157c_lxa_mc1, stm32mp157c-lxa-mc1)
+$(call build_stm32mp_image, CONFIG_MACH_LXA_TAC, start_stm32mp15xc_lxa_tac, stm32mp15xc-lxa-tac)
 
 $(call build_stm32mp_image, CONFIG_MACH_PROTONIC_STM32MP1, start_prtt1a, prtt1a)
 $(call build_stm32mp_image, CONFIG_MACH_PROTONIC_STM32MP1, start_prtt1s, prtt1s)
